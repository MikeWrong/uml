@startuml
title:状态模式

/'环境(Context)角色，也成上下文：定义客户端所感兴趣的接口，并且保留一个具体状态类的实例。这个具体状态类的实例给出此环境对象的现有状态。'/
class Context{
+algorithm():void
+setStrategy(Strategy):void
}

/'抽象状态(State)角色：定义一个接口，用以封装环境（Context）对象的一个特定的状态所对应的行为。'/
class State{
+handle():void
}

/'具体状态(ConcreteState)角色：每一个具体状态类都实现了环境（Context）的一个状态所对应的行为。'/
class ConcreteStateA{
+handle():void
}

class ConcreteStateB{
+handle():void
}

State<|..ConcreteStateA:实现
State<|..ConcreteStateB:实现

Context*-ri->State:组合

note "策略模式和状态模式区别:策略模式一般用于单个算法，而状态模式的每个状态子类中\n需要包含所有原来的语境类（Context）中的所有方法的具体实现。" as 区别

@enduml
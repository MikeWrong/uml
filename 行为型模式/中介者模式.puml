@startuml
title:中介者模式

/'Mediator: 抽象中介者。定义了同事对象到中介者对象之间的接口。'/
abstract class Mediator{
+operation(int):void
+register(Colleague):void
}

/'ConcreteMediator: 具体中介者。实现抽象中介者的方法，它需要知道所有的具体同事类，同时需要从具体的同事类那里接收信息，并且向具体的同事类发送信息。'/
class ConcreteMediator{
+operation(int):void
}

Mediator<|--ConcreteMediator:泛化

/'Colleague: 抽象同事类。'/
abstract class Colleague{
+receiveMsg():void
+sendMsg(int):void
+setMediator(Mediator):void
}

/'ConcreteColleague: 具体同事类。每个具体同事类都只需要知道自己的行为即可，但是他们都需要认识中介者。'/
class ConcreteColleagueA{
+sendMsg(int):void
+setMediator(Mediator):void
}

class ConcreteColleagueB{
+sendMsg(int):void
+setMediator(Mediator):void
}

Colleague<|--ConcreteColleagueA:泛化
Colleague<|--ConcreteColleagueB:泛化

Mediator<-left-Colleague:关联
ConcreteColleagueA<--ConcreteMediator:关联
ConcreteColleagueB<--ConcreteMediator:关联

@enduml